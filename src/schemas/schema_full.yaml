#FIXME: check all JSON refs
title: A JSON Model for Swagger 2.0 API.
# https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#swagger-object
description: This is the root document object for the API specification.
'{swagger}!':
  description: The Swagger version of this document.
  enum: ['2.0']
'{info}!': '#/definitions/info'
'{host}':
  description: "The host (name or ip) of the API. Example: 'swagger.io'"
  type: string
  pattern: "^[^{}/ :\\\\]+(?::\\d+)?$"
'{basePath}':
  description: "The base path to the API. Example: '/api'."
  type: string
  pattern: '^/'
'{schemes}': '#/definitions/schemesList'
'{consumes}':
  description: A list of MIME types accepted by the API.
  extends: '#/definitions/mediaTypeList'
'{produces}':
  description: A list of MIME types the API can produce.
  extends: '#/definitions/mediaTypeList'
'{paths}!': '#/definitions/paths'
'{definitions}': '#/definitions/definitions'
'{parameters}': '#/definitions/parametersDefinitions'
'{responses}': '#/definitions/responsesDefinitions'
'{securityDefinitions}': '#/definitions/securityDefinitions'
'{security}': '#/definitions/security'
'{tags}':
  '[0..]': '#/definitions/tag'
  uniqueItems: true
'{externalDocs}': '#/definitions/externalDocs'
'{/^x-/}': '#/definitions/vendorExtension'
#FIXME
definitions:
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#infoObject
  info:
    description: General information about the API.
    '{title}!':
      description: A unique and precise title of the API.
      type: string
    '{description}':
      description: A longer description of the API. Should be different from the title.  GitHub Flavored Markdown is allowed.
      type: string
    '{termsOfService}':
      description: The terms of service for the API.
      type: string
    '{contact}': '#/definitions/contact'
    '{license}': '#/definitions/license'
    '{version}!':
      description: A semantic version number of the API.
      type: string
    '{/^x-/}': '#/definitions/vendorExtension'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#contact-object
  contact:
    description: Contact information for the owners of the API.
    '{name}':
      description: The identifying name of the contact person/organization.
      type: string
    '{url}':
      description: The URL pointing to the contact information.
      extends: '#/definitions/UrlString'
    '{email}':
      description: The email address of the contact person/organization.
      type: string
      #FIXME: check
      format: email
    '{/^x-/}': '#/definitions/vendorExtension'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#license-object
  license:
    description: License information for the exposed API.
    '{name}!':
      description: "The name of the license type. It's encouraged to use an OSI compatible license."
      type: string
    '{url}':
      description: The URL pointing to the license.
      extends: '#/definitions/UrlString'
    '{/^x-/}': '#/definitions/vendorExtension'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#paths-object
  paths:
    description: "Relative paths to the individual endpoints. They must be relative to the 'basePath'."
    '{/^\//}': '#/definitions/pathItem'
    '{/^x-/}': '#/definitions/vendorExtension'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#path-item-object
  pathItem:
    description: Describes the operations available on a single path.
    'switch{$ref}!':
      #TODO: validate external
      '@string': {}
      #FIXME: think
      '=undefined':
        '{get}': '#/definitions/operation'
        '{put}': '#/definitions/operation'
        '{post}': '#/definitions/operation'
        '{delete}': '#/definitions/operation'
        '{options}': '#/definitions/operation'
        '{head}': '#/definitions/operation'
        '{patch}': '#/definitions/operation'
        '{parameters}': '#/definitions/parametersList'
        '{/^x-/}': '#/definitions/vendorExtension'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#operation-object
  operation:
    description: Describes a single API operation on a path.
    '{tags}':
      description: A list of tags for API documentation control.
      '[0..]': '@string'
      uniqueItems: true
    '{summary}':
      description: A brief summary of the operation.
      type: string
    '{description}':
      description: 'A longer description of the operation, GitHub Flavored Markdown is allowed.'
      type: string
    '{externalDocs}': '#/definitions/externalDocs'
    '{operationId}':
      description: A unique identifier of the operation.
      type: string
    '{produces}':
      description: A list of MIME types the API can produce.
      extends: '#/definitions/mediaTypeList'
    '{consumes}':
      description: A list of MIME types the API can consume.
      extends: '#/definitions/mediaTypeList'
    '{parameters}': '#/definitions/parametersList'
    '{responses}!': '#/definitions/responses'
    '{schemes}': '#/definitions/schemesList'
    '{deprecated}':
      description: 'Declares this operation to be deprecated.'
      type: boolean
      default: false
    '{security}': '#/definitions/security'
    '{/^x-/}': '#/definitions/vendorExtension'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#external-documentation-object
  externalDocs:
    description: information about external documentation
    '{description}': '@string'
    '{url}!': '#/definitions/UrlString'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object
  parameter:
    '{name}!':
      description: The name of the parameter.
      type: string
    '{description}':
      description: A brief description of the parameter. This could contain examples of use.
      type: string
    '{required}':
      description: Determines whether or not this parameter is required or optional.
      type: boolean
      default: false
    'switch{in}!':
      description: Determines the location of the parameter.
      '="body"':
        '{schema}!': '#/definitions/schema'
      '="query"':
        extends: '#/definitions/stringifyValueMixin'
        allOf:
          - $ref: '#/definitions/allowEmptyValueMixin'
      '="header"':
        extends: '#/definitions/stringifyValueMixin'
      '="path"':
        extends: '#/definitions/stringifyValueMixin'
        '{required}!': '=true'
      '="formData"':
        'switch{type}!':
          '="file"': {}
          default:
            extends: '#/definitions/stringifyValueMixin'
            allOf:
              - $ref: '#/definitions/allowEmptyValueMixin'
    '{/^x-/}': '#/definitions/vendorExtension'
    #FIXME: should be recursive
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#items-object
  primitivesItems:
    extends: '#/definitions/stringifyValueMixin'
    '{/^x-/}': '#/definitions/vendorExtension'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#responses-object
  responses:
    description: "Response objects names can either be any valid HTTP status code or 'default'."
    '{default}': '#/definitions/response'
    #$$ref: '#/definitions/response'
    '{/[0-9]{3}/}':'#/definitions/response'
    #$$ref: '#/definitions/response'
    #FIXME: custom error
    # The Responses Object MUST contain at least one response code, and it SHOULD be the response for a successful operation call.
    '{/^x-/}': '#/definitions/vendorExtension'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#response-object
  response:
    '{description}!': '@string'
    '{schema}':
      mixin: '#/definitions/schema'
      'switch{type}':
        #TODO: not all constrain make sence  for e.g. xml
        '="file"': {}
    '{headers}': '#/definitions/headers'
    '{examples}': '#/definitions/examples'
    '{/^x-/}': '#/definitions/vendorExtension'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#headers-object
  headers:
    '{*}': '#/definitions/header'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#headers-object
  examples:
    '{*}': '@any'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#header-object
  header:
    '{description}': '@string'
    'extends': '#/definitions/stringifyValueMixin'
    '{/^x-/}': '#/definitions/vendorExtension'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#tag-object
  tag:
    '{name}!': '@string'
    '{description}': '@string'
    '{externalDocs}': '#/definitions/externalDocs'
    '{/^x-/}': '#/definitions/vendorExtension'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schema-object
  schema:
    description: A deterministic version of a JSON Schema object.
    $$ref: '#/definitions/schema'
    #copied from https://github.com/json-schema/json-schema/blob/master/draft-04/schema
    '{title}': '@string'
    '{description}': '@string'
    'switch{type}':
      '="array"':
        'switch{items}!':
          '@array':
            '[0..]!': '#/definitions/schema'
          '@object': '#/definitions/schema'
      '="object"':
        '{required}':
          '[0..]!': '@string'
          uniqueItems: true
        '{properties}':
          '{*}': '#/definitions/schema'
          default: {}
        '{additionalProperties}':
          switch:
            '@boolean': {}
            '@object': '#/definitions/schema'
          default: {}
        '{maxProperties}':
          type: integer
          '>=': 0
        '{minProperties}':
          type: integer
          '>=': 0
          default: 0
    '{allOf}':
      '[0..]!': '#/definitions/schema'
    # Swagger extensions
    '{discriminator}': '@string'
    '{readOnly}':
      type: boolean
      default: false
    '{xml}': '#/definitions/xml'
    '{externalDocs}': '#/definitions/externalDocs'
    '{example}': {}
    '{/^x-/}': '#/definitions/vendorExtension'
    allOf:
      - $ref: '#/definitions/jsonSchemaFormatMixin'
      - $ref: '#/definitions/jsonSchemaEnumMixin'
      - $ref: '#/definitions/jsonSchemaDefaultMixin'
      - $ref: '#/definitions/jsonSchemaArrayConstraintsMixin'
      - $ref: '#/definitions/jsonSchemaStringConstraintsMixin'
      - $ref: '#/definitions/jsonSchemaNumberConstraintsMixin'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#xml-object
  xml:
    '{name}': '@string'
    '{namespace}': '@string'
    '{prefix}': '@string'
    '{attribute}':
      type: boolean
      default: false
    '{wrapped}':
      type: boolean
      default: false
    '{/^x-/}': '#/definitions/vendorExtension'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#definitions-object
  definitions:
    description: One or more JSON objects describing the schemas being consumed and produced by the API.
    '{*}': '#/definitions/schema'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameters-definitions-object
  parametersDefinitions:
    description: One or more JSON representations for parameters
    '{*}': '#/definitions/parameter'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#responses-definitions-object
  responsesDefinitions:
    description: One or more JSON representations for parameters
    '{*}': '#/definitions/response'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#security-definitions-object
  securityDefinitions:
    '{*}': '#/definitions/securityScheme'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#security-scheme-object
  securityScheme:
    '{description}': '@string'
    'switch{type}!':
      '="basic"': {}
      '="apiKey"':
        '{name}!': '@string'
        '{in}!':
          enum: ['header', 'query']
      '="oauth2"':
        '{scopes}!': '#/definitions/oauth2Scopes'
        'switch{flow}!':
          '="implicit"':
            '{authorizationUrl}!':'#/definitions/UrlString'
          '="password"':
            '{tokenUrl}!': '#/definitions/UrlString'
          '="application"':
            '{tokenUrl}!': '#/definitions/UrlString'
          '="accessCode"':
            '{authorizationUrl}!':'#/definitions/UrlString'
            '{tokenUrl}!': '#/definitions/UrlString'
    '{/^x-/}': '#/definitions/vendorExtension'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#scopes-object
  oauth2Scopes:
    '{*}': '@string'
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#security-requirement-object
  securityRequirement:
    '{*}':
      '[0..]': '@string'
      uniqueItems: true
  # https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#specification-extensions
  vendorExtension:
    description: Specification Extension to the Swagger Schema.
    type: any
##
  UrlString:
    type: string
    format: uri
  parametersList:
    description: The parameters needed to send a valid API call.
    '[0..]':
      #FIXME: $ref isn't valid parameter. How to handle?
      $$ref: '#/definitions/parameter'
      allOf:
        $ref: '#/definitions/parameter'
    uniqueItems: true
  mediaTypeList:
    '[0..]':
      description: The MIME type of the HTTP message.
      type: string
    uniqueItems: true
  allowEmptyValueMixin:
    properties:
      allowEmptyValue:
        description: allows sending a parameter by name only or with an empty value.
        type: boolean
        default: false
  stringifyValueMixin:
    require:
      - type
    properties:
      type: {}
      collectionFormat:
        #FIXME: check that only 'query' and 'formData' have 'multi' on top level
        #check that on the same level in === 'query or in === 'formData'
        enum: ['csv', 'ssv', 'tsv', 'pipes', 'multi']
        default: csv
    valueSwitch:
      property: type
      values:
        string:
          $ref: '#/definitions/jsonSchemaStringConstraintsMixin'
        number:
          $ref: '#/definitions/jsonSchemaNumberConstraintsMixin'
        integer:
          $ref: '#/definitions/jsonSchemaNumberConstraintsMixin'
        boolean: {}
        array:
          require:
            - items
          properties:
            items:
              $ref: '#/definitions/primitivesItems'
          allOf:
            - $ref: '#/definitions/jsonSchemaArrayConstraintsMixin'
    allOf:
      - $ref: '#/definitions/jsonSchemaFormatMixin'
      - $ref: '#/definitions/jsonSchemaEnumMixin'
      - $ref: '#/definitions/jsonSchemaDefaultMixin'
  jsonSchemaFormatMixin:
    '{format}': '@string'
  jsonSchemaEnumMixin:
    '{enum}':
      '[0..]!': {}
      uniqueItems: true
  jsonSchemaDefaultMixin:
    '{default}': {}
  jsonSchemaArrayConstraintsMixin:
    '{maxItems}':
      type: integer
      '>=': 0
    '{minItems}':
      type: integer
      '>=': 0
      default: 0
    '{uniqueItems}':
      type: boolean
      default: false
  jsonSchemaStringConstraintsMixin:
    '{maxLength}':
      type: integer
      '>=': 0
    '{minLength}':
      type: integer
      '>=': 0
      default: 0
    '{pattern}':
      type: string
      format: regex
  jsonSchemaNumberConstraintsMixin:
    '{multipleOf}':
      type: number
      '>': 0
    'switch{maximum}':
      '@number':
        '{exclusiveMaximum}':
          type: boolean
          default: false
    'switch{minimum}':
      '@number':
        '{exclusiveMinimum}':
          type: boolean
          default: false
  security:
    '[0..]': '#/definitions/securityRequirement'
    uniqueItems: true
  schemesList:
    description: The transfer protocol of the API.
    '[0..]':
      enum: ['http', 'https', 'ws', 'wss']
    uniqueItems: true
